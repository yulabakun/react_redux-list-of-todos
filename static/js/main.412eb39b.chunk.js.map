{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","value","filterReducer","todosReducer","rootReducer","combineReducers","currentTodo","filter","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoItem","dispatch","useState","todoSelected","setTodoSelected","currentSelected","useEffect","className","id","completed","title","onClick","CurrentTodoActions","TodoList","filterByStatus","visibleTodos","setVisibleTodos","newTodos","allTodos","searchQuery","filteredTodos","lowerQuery","toLowerCase","includes","getVisibleTodos","length","map","TodoFilter","onSubmit","event","preventDefault","onChange","target","filterActions","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","userId","data","href","email","name","App","selectedTodo","setSelectedTodo","TodoActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.412eb39b.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = { type: 'currentTodo/SET', payload: Todo };\ntype Action = SetTodoAction | RemoveTodoAction;\ntype State = Todo | null;\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setTodo, removeTodo };\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQuery = { type: 'query/SET', payload: string };\ntype ClearQuery = { type: 'query/CLEAR' };\ntype SetFilter = { type: 'filter/SET', payload: Status };\ntype Action = SetQuery | ClearQuery | SetFilter;\ntype State = { query: string, status: Status };\n\nconst changeQuery = (value: string): SetQuery => (\n  { type: 'query/SET', payload: value });\n\nconst clearQuery = (): ClearQuery => ({ type: 'query/CLEAR' });\n\nconst changeFilter = (value: Status): SetFilter => (\n  { type: 'filter/SET', payload: value });\n\nconst initialState: State = { query: '', status: 'all' };\n\nconst filterReducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET':\n      return { ...state, status: action.payload };\n\n    case 'query/SET':\n      return { ...state, query: action.payload };\n\n    case 'query/CLEAR':\n      return { ...state, query: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = { changeQuery, clearQuery, changeFilter };\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodos = { type: 'todos/SET', payload: Todo[] };\ntype Action = SetTodos;\ntype State = Todo[];\n\nconst setTodos = (value: Todo[]): SetTodos => (\n  { type: 'todos/SET', payload: value });\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...state, ...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setTodos };\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { actions as CurrentTodoActions } from '../../features/currentTodo';\nimport { useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useDispatch();\n  const [todoSelected, setTodoSelected] = useState<Todo | null>(null);\n  const currentSelected = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setTodoSelected(currentSelected);\n  }, [currentSelected]);\n\n  const setCurrentTodo = (currTodo: Todo) => {\n    dispatch(CurrentTodoActions.setTodo(currTodo));\n  };\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setCurrentTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={`far ${todo.id === todoSelected?.id ? 'fa-eye-slash' : 'fa-eye'}`}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nfunction getVisibleTodos(\n  allTodos: Todo[],\n  searchQuery: string,\n  filter: Status,\n): Todo[] {\n  let filteredTodos = [...allTodos];\n\n  if (searchQuery) {\n    const lowerQuery = searchQuery.toLowerCase();\n\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title.toLowerCase().includes(lowerQuery));\n  }\n\n  if (filter) {\n    switch (filter) {\n      case 'active':\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return filteredTodos;\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const query = useAppSelector(state => state.filter.query);\n  const filterByStatus = useAppSelector(state => state.filter.status);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n\n  useEffect(() => {\n    const newTodos = getVisibleTodos(todos, query, filterByStatus);\n\n    setVisibleTodos(newTodos);\n  }, [query, filterByStatus]);\n\n  return (\n    <>\n      {visibleTodos.length === 0\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n\n        ) : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {visibleTodos.map(todo => (\n                <TodoItem todo={todo} key={todo.id} />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const query = useAppSelector(state => state.filter.query);\n\n  const changeQuery = (value: string) => {\n    dispatch(filterActions.changeQuery(value));\n  };\n\n  const clearQuery = () => dispatch(filterActions.clearQuery());\n\n  const changeFilter = (value: Status) => {\n    dispatch(filterActions.changeFilter(value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => changeFilter(event.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => changeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { actions as CurrentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const todo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(data => setUser(data));\n    }\n  }, []);\n\n  const deleteCurrTodo = () => dispatch(CurrentTodoActions.removeTodo());\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={deleteCurrTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo?.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong\n                  className={todo?.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                >\n                  {todo?.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )\n        : <Loader />}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as TodoActions } from './features/todos';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n\n  const todoSelected = useAppSelector(state => state.currentTodo);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(data => dispatch(TodoActions.setTodos(data)));\n  }, []);\n\n  useEffect(() => {\n    setSelectedTodo(todoSelected);\n  }, [todoSelected]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : <TodoList todos={todos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}